{"ast":null,"code":"var _jsxFileName = \"/home/pedroresende/trybe-exercicios/front-end/secao-9/dia-1-React-Hooks-usestate-useEffect/trybemail/src/components/List.jsx\";\nimport PropTypes from 'prop-types';\nimport { READ, UNREAD } from '../constants';\nimport readIcon from '../icons/read.svg';\nimport unreadIcon from '../icons/unread.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List(_ref) {\n  let {\n    messages,\n    setMessageStatus\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"messages-list\",\n    children: messages.map(message => {\n      const messageClass = message.status === READ ? 'message-read' : 'message-unread';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: `message-title ${messageClass}`,\n          children: message.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            title: \"Marcar como lida\",\n            onClick: () => setMessageStatus(message.id, READ),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: readIcon,\n              alt: \"icone lida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            title: \"Marcar como n\\xE3o lida\",\n            onClick: () => setMessageStatus(message.id, UNREAD),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: unreadIcon,\n              alt: \"icone n\\xE3o lida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = List;\nList.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    status: PropTypes.number\n  })).isRequired,\n  setMessageStatus: PropTypes.func.isRequired\n};\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["PropTypes","READ","UNREAD","readIcon","unreadIcon","List","messages","setMessageStatus","map","message","messageClass","status","title","id","propTypes","arrayOf","shape","number","string","isRequired","func"],"sources":["/home/pedroresende/trybe-exercicios/front-end/secao-9/dia-1-React-Hooks-usestate-useEffect/trybemail/src/components/List.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport { READ, UNREAD } from '../constants'\n\nimport readIcon from '../icons/read.svg'\nimport unreadIcon from '../icons/unread.svg'\n\nfunction List ({messages, setMessageStatus }) {\n  return (\n    <ul className=\"messages-list\">\n      {\n        messages.map((message) => {\n          const messageClass = message.status === READ\n            ? 'message-read'\n            : 'message-unread'\n          return (\n            <li key={ message.id }>\n              <p\n                className={`message-title ${messageClass}`}\n              >\n                { message.title }\n              </p>\n              <div>\n                <button\n                  type=\"button\"\n                  title=\"Marcar como lida\"\n                  onClick={ () => setMessageStatus(message.id, READ)}\n                >\n                  <img src={ readIcon } alt=\"icone lida\" />\n                </button>\n                <button\n                  type=\"button\"\n                  title=\"Marcar como não lida\"\n                  onClick={ () => setMessageStatus(message.id, UNREAD)}\n                >\n                  <img src={ unreadIcon } alt=\"icone não lida\" />\n                </button>\n              </div>\n            </li>\n          )\n        })\n      }\n    </ul>\n  )\n}\n\nList.propTypes = {\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      status: PropTypes.number,\n    }),\n  ).isRequired,\n  setMessageStatus: PropTypes.func.isRequired,\n};\n\nexport default List"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAElC,SAASC,IAAI,EAAEC,MAAM,QAAQ,cAAc;AAE3C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,UAAU,MAAM,qBAAqB;AAAA;AAE5C,SAASC,IAAI,OAAiC;EAAA,IAA/B;IAACC,QAAQ;IAAEC;EAAiB,CAAC;EAC1C,oBACE;IAAI,SAAS,EAAC,eAAe;IAAA,UAEzBD,QAAQ,CAACE,GAAG,CAAEC,OAAO,IAAK;MACxB,MAAMC,YAAY,GAAGD,OAAO,CAACE,MAAM,KAAKV,IAAI,GACxC,cAAc,GACd,gBAAgB;MACpB,oBACE;QAAA,wBACE;UACE,SAAS,EAAG,iBAAgBS,YAAa,EAAE;UAAA,UAEzCD,OAAO,CAACG;QAAK;UAAA;UAAA;UAAA;QAAA,QACb,eACJ;UAAA,wBACE;YACE,IAAI,EAAC,QAAQ;YACb,KAAK,EAAC,kBAAkB;YACxB,OAAO,EAAG,MAAML,gBAAgB,CAACE,OAAO,CAACI,EAAE,EAAEZ,IAAI,CAAE;YAAA,uBAEnD;cAAK,GAAG,EAAGE,QAAU;cAAC,GAAG,EAAC;YAAY;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QAClC,eACT;YACE,IAAI,EAAC,QAAQ;YACb,KAAK,EAAC,yBAAsB;YAC5B,OAAO,EAAG,MAAMI,gBAAgB,CAACE,OAAO,CAACI,EAAE,EAAEX,MAAM,CAAE;YAAA,uBAErD;cAAK,GAAG,EAAGE,UAAY;cAAC,GAAG,EAAC;YAAgB;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QACxC;QAAA;UAAA;UAAA;UAAA;QAAA,QACL;MAAA,GArBEK,OAAO,CAACI,EAAE;QAAA;QAAA;QAAA;MAAA,QAsBf;IAET,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QAED;AAET;AAAC,KArCQR,IAAI;AAuCbA,IAAI,CAACS,SAAS,GAAG;EACfR,QAAQ,EAAEN,SAAS,CAACe,OAAO,CACzBf,SAAS,CAACgB,KAAK,CAAC;IACdH,EAAE,EAAEb,SAAS,CAACiB,MAAM;IACpBL,KAAK,EAAEZ,SAAS,CAACkB,MAAM;IACvBP,MAAM,EAAEX,SAAS,CAACiB;EACpB,CAAC,CAAC,CACH,CAACE,UAAU;EACZZ,gBAAgB,EAAEP,SAAS,CAACoB,IAAI,CAACD;AACnC,CAAC;AAED,eAAed,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}