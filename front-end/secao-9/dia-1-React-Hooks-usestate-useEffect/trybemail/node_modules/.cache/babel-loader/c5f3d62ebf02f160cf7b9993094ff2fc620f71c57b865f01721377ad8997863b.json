{"ast":null,"code":"var _jsxFileName = \"/home/pedroresende/trybe-exercicios/front-end/secao-9/dia-1-React-Hooks-usestate-useEffect/trybemail/src/components/List.jsx\";\nimport PropTypes from 'prop-types';\nimport { READ, UNREAD } from '../constants';\nimport readIcon from '../icons/read.svg';\nimport unreadIcon from '../icons/unread.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List(_ref) {\n  let {\n    messages\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"messages-list\",\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message-title\",\n        children: message.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = List;\nList.propTypes = {\n  messages: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    status: PropTypes.number\n  })).isRequired\n};\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["PropTypes","READ","UNREAD","readIcon","unreadIcon","List","messages","map","message","title","id","propTypes","arrayOf","shape","number","string","status","isRequired"],"sources":["/home/pedroresende/trybe-exercicios/front-end/secao-9/dia-1-React-Hooks-usestate-useEffect/trybemail/src/components/List.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { READ, UNREAD } from '../constants'\nimport readIcon from '../icons/read.svg'\nimport unreadIcon from '../icons/unread.svg'\n\nfunction List ({messages}) {\n  return (\n    <ul className=\"messages-list\">\n      {\n        messages.map((message) => (\n          <li key={ message.id }>\n            <p className=\"message-title\">{ message.title }</p>\n          </li>\n        ))\n      }\n    </ul>\n  )\n}\n\nList.propTypes = {\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      status: PropTypes.number,\n    }),\n  ).isRequired,\n};\n\nexport default List"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,EAAEC,MAAM,QAAQ,cAAc;AAC3C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,UAAU,MAAM,qBAAqB;AAAA;AAE5C,SAASC,IAAI,OAAc;EAAA,IAAZ;IAACC;EAAQ,CAAC;EACvB,oBACE;IAAI,SAAS,EAAC,eAAe;IAAA,UAEzBA,QAAQ,CAACC,GAAG,CAAEC,OAAO,iBACnB;MAAA,uBACE;QAAG,SAAS,EAAC,eAAe;QAAA,UAAGA,OAAO,CAACC;MAAK;QAAA;QAAA;QAAA;MAAA;IAAM,GAD1CD,OAAO,CAACE,EAAE;MAAA;MAAA;MAAA;IAAA,QAGrB;EAAC;IAAA;IAAA;IAAA;EAAA,QAED;AAET;AAAC,KAZQL,IAAI;AAcbA,IAAI,CAACM,SAAS,GAAG;EACfL,QAAQ,EAAEN,SAAS,CAACY,OAAO,CACzBZ,SAAS,CAACa,KAAK,CAAC;IACdH,EAAE,EAAEV,SAAS,CAACc,MAAM;IACpBL,KAAK,EAAET,SAAS,CAACe,MAAM;IACvBC,MAAM,EAAEhB,SAAS,CAACc;EACpB,CAAC,CAAC,CACH,CAACG;AACJ,CAAC;AAED,eAAeZ,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}